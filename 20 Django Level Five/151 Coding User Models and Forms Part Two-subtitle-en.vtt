WEBVTT

00:04.670 --> 00:11.120
Hello everyone and welcome back to part two of coding out the user models to actually fit the registration

00:11.120 --> 00:12.480
part of this project.

00:12.490 --> 00:17.870
What we need to do is start working with the team else so those templates we're going to do is come

00:17.870 --> 00:24.860
over here to templates create a new folder we'll call it basic underscore app to match name for application

00:25.280 --> 00:27.800
and then under this I'm going to create a new file.

00:27.800 --> 00:30.970
Now call it base h T.M..

00:31.070 --> 00:37.610
So it's going to be the base H.T. mail that we will be inheriting from or create in other new file and

00:37.610 --> 00:38.810
we'll call this index.

00:38.830 --> 00:47.300
H team L that will be the actual index page then we'll create one new file and this will be registration.

00:47.370 --> 00:48.220
H T.M..

00:48.270 --> 00:53.700
So the registration page and then we haven't talked about it yet but after someone's registered they're

00:53.700 --> 00:57.000
going to want to log in and log out of the page.

00:57.000 --> 01:01.050
So we'll create a new file called log in.

01:01.110 --> 01:03.980
H t l and we won't work with that right now.

01:03.990 --> 01:06.380
We'll have another discussion about logging and logging out.

01:06.540 --> 01:11.760
But right now I want to work on these three main files base index studies T.M. and registration and

01:11.760 --> 01:16.560
once you've them that we'll also edit the Urals up high file at the project and create your Allsopp

01:16.620 --> 01:18.580
profile for a basic application.

01:18.770 --> 01:24.620
Well let's start off with the base which is going to have everything we need for the project.

01:24.630 --> 01:29.840
So the first thing on the base page html page we don't have that open restriction.

01:30.150 --> 01:35.220
Basically Sammael page let me collapse this so I get a little more room is type HTL and let all the

01:35.220 --> 01:41.770
automatic input and we would just call this base for the title actually won't give it anything because

01:41.770 --> 01:43.820
we don't want to inherit the title block there.

01:43.900 --> 01:49.510
You could make another block for a title block and then inherit everything kind of separately the head

01:49.540 --> 01:50.400
and the body.

01:50.560 --> 01:52.500
That's totally a normal thing to do.

01:52.600 --> 01:56.860
But we won't focus on that until we actually get to the clone projects because we don't care too much

01:56.860 --> 01:58.090
about looking good.

01:58.180 --> 02:05.260
Right now what I'm going to say is pass in the bootstrap I mention we don't care about looking good

02:05.300 --> 02:06.830
but we want to look a little bit good.

02:06.970 --> 02:11.770
So it hasn't bootstrap and then I'm going to create a bar on this page just so we can quickly jump to

02:11.770 --> 02:13.450
links on the page.

02:13.450 --> 02:15.200
So this nav bar.

02:15.730 --> 02:31.810
It's going to be with the class equal to nav bar space nav bar dasht default space nav bar bash static

02:32.420 --> 02:35.670
the top.

02:35.820 --> 02:41.460
Then after that going to make a div and that's going to be inside of a container class and then after

02:41.460 --> 02:47.860
that loops then after that I'm going to create a unordered list.

02:47.950 --> 02:49.800
And that's going to contain all the links.

02:49.840 --> 02:55.270
So this unordered list is going to have a class of NAV space.

02:55.280 --> 02:58.850
Now Barbash nav and you can always copy and paste this from the notes.

02:58.870 --> 03:02.880
If you don't want to watch me code this whole thing out.

03:02.920 --> 03:07.570
So inside this unordered list are going to be the actual links to the other pages on the site.

03:07.720 --> 03:14.650
So create three anchor tags and these anchor tags are going to have a class equal to either nav bar

03:14.880 --> 03:18.160
brand or nav bar that links all say nav bar.

03:18.160 --> 03:22.140
That brand will have this link back to the actual home page.

03:22.300 --> 03:24.590
So we'll use template tagging for this.

03:24.600 --> 03:29.640
Hopefully remember from the template tagging lectures that we can just type in your l and then index.

03:29.650 --> 03:34.470
If we set up their view or the you are up high file properly we haven't actually set the URLs up by

03:34.480 --> 03:37.670
file so we'll have to do that and make sure it matches these.

03:37.890 --> 03:45.820
RFE RL template calls but I will have here be the actual text say something like Django or home or whatever

03:45.820 --> 03:46.530
you want.

03:47.420 --> 03:50.580
And then we'll create another list in other anchor tag.

03:50.750 --> 03:59.060
And this is going to be of a class as well will say class and this anchor tag is equal to NAV bar dash

03:59.210 --> 04:04.160
link and I'm going to copy and paste this because we're going to see it again right below to link to

04:04.160 --> 04:05.870
another page on the site.

04:05.870 --> 04:13.850
So this will be the adamant site and let's make this be the register site.

04:13.950 --> 04:19.620
So for the actual registration then what we will do here is say under Tref

04:23.080 --> 04:26.590
create a URL tag and make sure have the percent signs up here as well.

04:27.340 --> 04:35.400
For the index page there we go under Atra here will say your old template that looks for basic app

04:38.400 --> 04:44.360
and then what it returns is whatever is named the register you.

04:44.440 --> 04:51.500
And then here we're going to say the same thing we'll call your L and then we'll say.

04:51.520 --> 04:57.860
Adam in and then passen index.

04:58.000 --> 05:00.500
All right so basically what we did is we set up a nav bar on the base.

05:00.500 --> 05:07.120
Each T.M. and it links back to the home page with chain go links back to the admin page and then links

05:07.140 --> 05:09.700
to the registration page which we haven't actually created yet.

05:09.810 --> 05:11.010
So we will in just a second.

05:11.040 --> 05:16.470
Later on when we talk about log in we'll show how we can use template tagging to add a Fourthly that

05:16.470 --> 05:20.670
will either say log in or log out the pending on what the user is doing.

05:21.150 --> 05:33.210
But after all of this outside of the nav bar what I want to do is say simply tagging Crit. a block all

05:33.210 --> 05:34.640
this block the body block

05:37.720 --> 05:39.580
and then I will also say and block

05:43.350 --> 05:48.240
and anything inside of this we'll just put them into a container.

05:48.330 --> 05:52.460
So for the other pages everything that's going to be there will be inside a container.

05:52.710 --> 05:53.700
Obviously that's optional.

05:53.700 --> 05:57.270
But for now this should work for us for a baseline age T.M..

05:57.300 --> 06:03.420
Now let's focus on the other files such as the home page so the home page is just going to extend from

06:03.420 --> 06:03.760
that.

06:03.770 --> 06:13.270
So we'll say extends basic underscore app slash based HVM bill.

06:13.650 --> 06:19.080
And I've noted a lot that you have to make sure the very first line in any age female file is this doc

06:19.070 --> 06:20.640
type H HVM L.

06:20.640 --> 06:25.410
The reason I can just say extends here is because if I extend this properly the very first line should

06:25.410 --> 06:29.290
be doctype HTL and the second line will be T.M. et cetera.

06:29.620 --> 06:34.940
Sometimes if you're a little paranoid you can always just copy paste this onto the first line to doublecheck

06:35.100 --> 06:37.100
although you have it twice doctype doctype.

06:37.350 --> 06:42.420
But just make sure that it's the top at the base h t m l at the very first line is extends and that

06:42.420 --> 06:43.600
should work fine as well.

06:44.590 --> 06:48.190
Up next one actually called the body block that we made.

06:48.190 --> 06:59.940
So we'll say block and then body underscore block and then we will say div Jumbotron.

07:00.080 --> 07:09.050
I tend to really like jumbo trons and will say Shingo level five is the home page.

07:09.410 --> 07:14.430
And then what we're going to do is continue on by calling the end block.

07:15.360 --> 07:17.720
So I will say and block right here.

07:21.790 --> 07:24.470
And the Block saved that.

07:24.490 --> 07:26.900
And now let's move on to the registration page.

07:27.010 --> 07:33.630
So we have registration and what's going to happen here is we also are going to extend going to say

07:33.630 --> 07:34.680
extends

07:39.120 --> 07:45.810
from basic app slash based HVM L and then I'm going to set up the actual registration form that's on

07:45.810 --> 07:46.660
the page.

07:46.950 --> 07:51.430
So we're going to look a little bit different but usually you're going to want to import some files.

07:51.600 --> 07:54.330
So maybe we want to import or load static files.

07:54.390 --> 07:55.260
We don't really have any.

07:55.260 --> 07:59.610
But just to show you what this would typically look like if you have static files maybe you want to

07:59.610 --> 08:06.480
import some images like welcome to the page like your brand image or whatever on your registration page.

08:06.480 --> 08:14.870
Typically you would need to load those static files in and then we're going to call block body block

08:16.670 --> 08:24.320
and whenever you do that you also want to call in and end the block and now let's actually put in the

08:24.320 --> 08:30.960
form so I'll say div this is a jumbotron.

08:31.170 --> 08:33.350
And what we're going to do is have some logic here.

08:35.460 --> 08:39.150
And the logic is going to look like this and this will make more sense when we talk about the views

08:39.210 --> 08:41.130
and the context dictionaries we return.

08:41.460 --> 08:49.870
But it's going to say if registered me in the context dictionary it returns something that says registered

08:50.240 --> 08:59.050
because I have an if I want to make sure I have an end if so I'll say if registered this person is going

08:59.050 --> 09:09.400
to say thank you or the site is going to say thank you for registering exclamation mark because I have

09:09.400 --> 09:12.970
an if I can have an LCR I will say.

09:12.970 --> 09:15.130
Else this person is not registered.

09:15.130 --> 09:20.560
Then we're going to actually display the Himmel for registration which is something like register here

09:22.370 --> 09:26.890
and let's pass on the actual file we'll say fill out the form

09:30.320 --> 09:33.960
and then we need to make the form using template tagging.

09:33.980 --> 09:36.150
So first we want to have the actual form.

09:36.290 --> 09:40.720
We don't need a class and we don't need an action we can take care of that later.

09:40.850 --> 09:46.610
But we do want to make sure that the method is equal to post and because we're using multimedia data

09:46.850 --> 09:53.480
that we're uploading such as the image file we just say E and C type is equal to.

09:53.630 --> 09:56.860
And we're going to say multipart form data.

09:56.960 --> 09:57.920
So make sure you have that.

09:57.920 --> 09:59.950
Otherwise the image uploading won't work.

10:00.690 --> 10:03.620
So we can have that and usually you want the method to be last.

10:03.630 --> 10:06.390
Although that doesn't actually affect it just for readability.

10:06.390 --> 10:09.120
Having this is more common.

10:09.120 --> 10:21.010
And then we're going to do is call an R C S R token C SRF underscore token and then call in the parts

10:21.010 --> 10:27.750
of the form Zoomer that former created we can say a user form as underscore the that's the base user

10:27.750 --> 10:32.430
form is going to ask for if we go back to the forms that come without.

10:32.800 --> 10:37.260
Member user forum we're asking for the user name to email the password that we need to call the user

10:37.260 --> 10:40.800
profile info form for the portfolio site and their profile pic.

10:40.800 --> 10:45.660
So coming back to registration and then once we grab those attributes from the bases or form I'm going

10:45.660 --> 10:50.240
to also want to grab stuff from my profile form as underscored.

10:50.760 --> 10:54.190
And this term user underscore form and profile underscore form.

10:54.210 --> 10:57.520
Those are going to be defined within the context dictionary of the views.

10:57.540 --> 10:59.620
So we haven't actually done that yet.

10:59.700 --> 11:06.090
So that type in an input is going to be a Samit type doesn't need to have a name but it does want to

11:06.090 --> 11:10.550
have a values will say register and that's the end of our form.

11:10.550 --> 11:12.670
So pretty simple so far.

11:12.840 --> 11:15.200
So we will save this.

11:15.440 --> 11:19.250
And what we've done so far this lecture is set up three main Tim L files.

11:19.370 --> 11:25.310
We set up our base the H team l file has a nav bar which has the links with the morals on them and then

11:25.400 --> 11:28.340
it also has the body blocks the index page.

11:28.340 --> 11:33.800
This is just the home page not much here except for Welcome to jingle level 5 essentially and then registration

11:33.800 --> 11:37.850
that each team L which has the tokens user forms and profile forms.

11:37.850 --> 11:42.080
So these are things from the user sending back the context dictionary that we haven't actually worked

11:42.080 --> 11:44.840
with yet before we actually conclude this lecture.

11:44.840 --> 11:47.840
Let's set up the Oreilles not py files to match up.

11:47.840 --> 11:51.680
And then in the next lecture we'll actually talk more about the registration and what the views that

11:51.680 --> 11:53.310
py files are going to look like.

11:55.120 --> 12:00.540
So let's start by jumping to the actual project that PI file to have opened here.

12:00.730 --> 12:03.010
We'll scroll down and set everything up.

12:03.010 --> 12:10.000
So what I want to do is say import your L now will also import include import admen and then I want

12:10.000 --> 12:14.870
to say from basic underscore at import views.

12:14.950 --> 12:19.840
Now we haven't worked out all the views that py file in fact if we take a look at it it's totally empty.

12:19.930 --> 12:23.380
But so far this is going to be a bunch of functions that we need to fill out later.

12:24.620 --> 12:29.470
So right now we'll kind of assume the names of those functions and then work backwards to them.

12:29.510 --> 12:36.070
Let's set up the home page and that's pretty easy every time we'll set up your el and then using regular

12:36.070 --> 12:36.670
expressions.

12:36.670 --> 12:47.500
I just want to say just the domain name Buzkashi index and we'll give it the name index.

12:47.510 --> 12:49.240
Let's set up a couple of more views.

12:49.400 --> 12:51.890
We'll set up the admin page to be your L up.

12:51.890 --> 12:52.940
That's actually what is set up for us.

12:52.940 --> 12:53.630
Never mind.

12:53.810 --> 12:55.680
Let's set up your l.

12:55.850 --> 13:05.750
Anything that has to do with basic app so we'll say our Here here basic underscore app slash and then

13:05.750 --> 13:11.550
I'm going to call include the basic underscore app.

13:11.860 --> 13:15.750
You are else OK.

13:15.800 --> 13:19.700
And then we'll talk about logging in and logging out later on.

13:19.700 --> 13:25.330
But these three views should work for now and if we come over to our basic app it doesn't have a girl's

13:25.490 --> 13:33.010
up-I file yet that will match up to include here so let's create it will say basic app you file your

13:33.050 --> 13:38.990
Alstott pie and let's actually do the Urals PI file for application.

13:39.040 --> 13:42.960
Firstly you say from Django.

13:43.180 --> 13:55.340
C o f dot you are else import Yoro and then we'll say from basic app and poor views.

13:56.190 --> 14:02.680
Again you can just say from Daut import use up to you and since we're using template tagging or I should

14:02.680 --> 14:07.450
say template your Elle's number we need to set up the app name variable.

14:07.450 --> 14:09.090
So here say something like.

14:09.100 --> 14:15.760
App name is equal to and then it has to match the actual application name not cases basic up and create

14:15.760 --> 14:25.100
some of your patterns and the patterns we are going to create is one for someone who's about to register.

14:25.100 --> 14:33.980
So we'll say our car register slash dollar sign and then this we'll call views and will have a function

14:33.980 --> 14:35.180
in there called register.

14:35.180 --> 14:40.460
We haven't made it yet but we'll create it in a little bit and then we'll say register there.

14:40.460 --> 14:44.650
So we'll add more to this later on but this should be a nice cutting off point.

14:44.670 --> 14:46.610
So let's quickly review everything we did.

14:46.610 --> 14:51.270
We set up base HD mail in the mail and registration that reached him L..

14:51.590 --> 14:55.310
And those are linking to the actual contex dictionary so we're going to return back.

14:55.320 --> 14:57.380
We will work with the views that PI file.

14:57.380 --> 15:02.110
Then we also set up the basics of our year olds up-I for both the project and the application.

15:02.120 --> 15:02.960
We're not done with them yet.

15:02.990 --> 15:04.550
We'll still add more stuff to them.

15:04.550 --> 15:09.770
When we talk about working up the logon page but now coming up next is the majority of the work and

15:09.770 --> 15:12.650
a lot of it happens right here with the views that PI file.

15:12.650 --> 15:17.300
So thanks everyone for watching and I'll see in the next lecture where we talk about the use of high

15:17.300 --> 15:19.430
file and setting up the registration here.
